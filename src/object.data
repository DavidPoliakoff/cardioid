simulate SIMULATE 
{
   anatomy = pioAnatomy;
   decomposition = koradi;
   diffusion = diffusion;
   reaction = TT04_CellML;
   stimulus = test;
   sensor = pointSensor;
   loop = 0;            // in timesteps
   maxLoop = 50000;     // in timesteps
   dt = 0.01 ms;
   time = 0 ms; 
   printRate = 50;      // in timesteps
   snapshotRate = 5000; // in timesteps
}

pioAnatomy ANATOMY 
{
   method = pio;
   fileName = snapshot.initial/anatomy#;
   cellTypes = -1;
   dx = 0.167 mm;
   dy = 0.167 mm;
   dz = 0.167 mm;
   conductivity = conductivity;
}

koradi DECOMPOSITION 
{
   method = koradi;
   verbose = 1;
   nCenters = 40;
   alpha = 0.5;
   maxVoronoiSteps = 100;
   maxSteps = 500;
   tolerance = 0.01;
   outputRate = 1;
   nbrDeltaR = 2;
}

grid DECOMPOSITION 
{
    method = grid;
    nx = 16;
    ny = 16;
    nz = 32;
}

diffusion DIFFUSION
{
   method = FGR;
   variant = omp;
   diffusionScale = 250.0 mm^3/mF;
}

conductivity CONDUCTIVITY
{
    method = fibre;
    sigmaLi = 0.0003 S/mm;
    sigmaTi = 0.00003 S/mm;
}

uniform CONDUCTIVITY
{
    method = uniform;
    sigma11 = 0.0001 S/mm;
    sigma22 = 0.0001 S/mm;
    sigma33 = 0.0001 S/mm;
    sigma12 = 0.0;
    sigma13 = 0.0;
    sigma23 = 0.0;
}

jhu CONDUCTIVITY
{
    method = JHU;
    sigmaLi = 0.0000315 S/mm;
    sigmaTi = 0.0003 S/mm;
    sheetAngle = 45;
    rotationMatrix = 1;
    homogeneousFiber = 0;
}

tenTusscher04 REACTION
{
    method = TT04_bb;
}

TT04_CellML REACTION
{
    method = TT04_CellML;
    integrator = rushLarsen;
}

FHN REACTION
{
    method = FHN;
}

test STIMULUS
{
     method = test;
     rank = 0;
     cell = 0;
     vStim = -52 mV/ms;
     tStart = 1 ms;
     duration = 1 ms;
     period = 1000 ms;
}

pointStimulus STIMULUS
{
  method = point;
  cell = 0;       // grid index of cell to stimulate
  period = 1000.0 ms;
  duration = 1.0 ms;
  vStim = -52.0 mV/ms;
  tStart = 10.0 ms;  // time in msec of first stimulus 
//tf = 5000.0 ms;  // no stimulus after this time (in msec)
}

boxStimulus STIMULUS
{
   method = box;
   yMax = 15;
   vStim = -40 mV/ms;
   tStart = 0 ms;
   duration = 5 ms;
   period = 1000 ms;
}
   

pointSensor SENSOR
{
  method = pointList;
  pointList = 13 400; // gids to print out (celltype must be nonzero, or no output)
  startTime = 0.0 ms;   // in ms
  printRate = 50;    // in timesteps
  printDerivs = 1;   // print dVm terms in addition to Vm (default = 0, i.e. off)
  dirname = sensorData; // created if necessary
  filename = vm_vs_t;
}

activationTime SENSOR
{
   method = activationTime;
   filename = activtionTime;
   printRate = 100000;
   evalRate = 1;
}
