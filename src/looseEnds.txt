1.  The Anatomy class is totally undefined, and is never filled with
data.

2.  The polymorphic pointers like Diffusion* in the Simulate class and
Conductivity* in the diffusion classes should be wrapped in a
templatized goody so that the default copy constructor, destructor, etc
will just work.

3.  It would really be better if the fibre orientation angles were
converted to a double (radians) when they are read in and the
conductivity models don't have to worry about the conversion.

4.  The grid spacing (in m) appears to be read from input.  Shouldn't
this travel with the anatomy data?  Where do the values that were used
in the test run from IBM come from.  They input deck contains no setting.

5.  I don't quite understand why I have to explicity cast calls to
Array3D::cArray() to const.  See for example
Salheen98PrecomputeDiffusion::precomputeCoefficients.  I know that the
return value isn't used in determining the overload resolution....

6.  There is output in FibreConductivity.cc that isn't screened for rank

7.  Be more careful about initializations in
Salheen98PrecomputeDiffusion:initializeLocalGridInfo

8.  There is something wrong with the Makefile.  Stuff doesn't rebuild
when headers are touched.

9.  Do something about the long comment in Conductivity.hh

10.  Initialization of Voltages

11.  initialization/filtering of cell types, including the use of type 9
and type 0

12.  Do we need to think about the fact that the reading process in
BlueBeats completely populates certain blocks such as tissue (and
probably conductivity)

13.  Base classes need virtual destructors

14.  The process of creating a HaloExchange from a GridRouter involves a
great deal of copying data.  This could be improved.

15.  I really don't like the way the Simulate class is turning out.  In
particular the fact that it owns things like GridRouter and
HaloExchange<double> voltageExchange that can't be easily initialized in
the constructor is a problem.

16.  There is way too much convertion from gids to tuples going on.
Should think about the right time to ditch the gids and just store
tuples.

17.  We allow multiple stimulus objects, but if two objects happen to
stimulate the same cell the last guy wins.  Is this what we want?
